{"version":3,"sources":["Auth/Cognito.js","Components/Customer/Customers.js","Auth/getToken.js","Config/backendConfig.js","Components/Services/AddComment.js","Components/Services/googleMaps.js","Components/Services/Archives.js","Components/Customer/EditCustomer.js","Components/Services/GetItembyId.js","Components/Services/Services.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["Cognito","Auth","region","userPoolId","userPoolWebClientId","Component","getToken","state","jwtToken","user","token","currentSession","then","data","idToken","catch","e","console","log","currentAuthenticatedUser","username","apiEndpoint","NewComment","props","handleChange","event","handleAuth","userlog","value","target","setState","newComment","date","Date","By","text","handleSubmit","preventDefault","addComment","ServiceID","isLoading","bind","axios","post","Comments","this","headers","res","window","location","Form","onSubmit","Group","Label","Control","as","name","rows","cols","onChange","Button","variant","type","withRouter","pinStyle","borderRadius","transform","FacilityPin","Icon","className","size","style","onClick","iconStyle","boxShadow","CurrentPin","color","GMaps","key","process","center","Coordinates","lat","lng","zoom","height","width","bootstrapURLKeys","defaultCenter","defaultZoom","yesIWantToUseGoogleMapApiInternals","TableStyle","Styled","div","Archives","handleFiles","file","files","filename","handleFileDescription","FileDescription","handleFilesSubmit","getSignedUrl","UploadUrl","filesOn","DescriptionArray","uploadProgress","url","descriptionArray","percentage","ProgressBar","now","archivesArray","map","indexOf","href","split","patch","serviceID","description","Url","UploadFile","put","onUploadProgress","Progress","lengthComputable","loaded","total","Math","round","Row","Col","Card","Header","Text","Table","striped","bordered","hover","getFiles","Accordion","Toggle","eventKey","updateProgressBarValue","Collapse","Body","controlId","FormControl","EditCustomer","handleImput","handleClose","show","CustomerName","customer","SiteNumber","Address","City","Province","PostalCode","ContactName","Phone","CustomerID","updateCustomer","Modal","aria-labelledby","centered","Title","id","placeholder","Footer","CommentStyle","styled","IdNumber","h1","Wrapper","Customer","Maps","Attach","NewCommentpos","GetItembyID","editButton","editCustomer","ticket","CustomerId","Addressfull","coordinates","newSearch","reload","newSearchText","searchText","getItem","handleSearch","prevProps","prevSearch","Spinner","animation","role","Geocode","setApiKey","customerAddress","fromAddress","response","results","geometry","error","ID","get","handleGeolocation","alert","showMap","handleMaprequest","customerEdit","handleCustomerEdit","CommentsArray","lstComments","comment","Subtitle","Container","Description","attachmentUrl","fileDescription","ServiceStyle","Services","handleChk","chkNewCustomer","handleCustomerSubmit","newCustomer","createItem","searchCustomer","handleServiceSubmit","newService","Status","PriorityLevel","CreatedBy","CustomMessage","customerSearchlst","modalShow","NewItem","item","history","push","pathname","customerLst","chooseCustomer","closeButton","showCustomerSearch","butText","formNewCust","Check","label","ModalList","AuthStyle","handleRoute","route","handleSearchSubmit","handleSearchInput","handleEnter","Navbar","bg","Brand","aria-controls","Nav","Link","inline","onKeyPress","hideDefault","inGreeting","path","component","React","Amplify","configure","cognito","App","withAuthenticator","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fc368388.chunk.js","sourcesContent":["const Cognito = {\n    Auth: {\n      // Amazon Cognito Region\n      region: \"ca-central-1\",\n  \n      // Amazon Cognito User Pool ID\n      userPoolId: \"ca-central-1_y3i0Krt0j\",\n  \n      // Amazon Cognito Web Client ID (26-char alphanumeric string)\n      userPoolWebClientId: \"7lp0df6po0f0fjj0qs2h8lqpva\"\n    }\n  };\n  \n  export default Cognito;","import React, {Component} from 'react';\n\nclass Customers extends Component{\n    render(){\n        return (\n            <div>\n                <h1>\n                    Next Customer\n                </h1>\n            </div>\n        );\n\n    }\n\n}\n\nexport default Customers;","import { Auth } from 'aws-amplify';\nimport React, {Component} from 'react';\n\nclass getToken extends Component {\n\n    constructor(){\n        super();\n        this.state ={\n            jwtToken :\"\",\n            user :\"\"\n                    };\n        this.token();\n    }\n    async token(){\n        \n        await Auth.currentSession()\n                .then(data => {this.state.jwtToken = data.idToken.jwtToken })\n                .catch(e => console.log(e))\n        await Auth.currentAuthenticatedUser()\n                .then(user => {this.state.user = user.username})\n                .catch(e => console.log(e))\n                  //console.log(this.state.jwtToken)\n        \n        \n    }\n\n\n}\n export default getToken;\n","\nconst apiId = 'fy9djecyw1'\nconst apiEndpoint = `https://${apiId}.execute-api.ca-central-1.amazonaws.com/dev`;\n\nexport default apiEndpoint;","import React, {Component} from 'react';\nimport axios from 'axios';\nimport getToken from '../../Auth/getToken';\nimport {Form, Button} from 'react-bootstrap';\nimport  apiEndpoint  from '../../Config/backendConfig';\nimport {withRouter} from 'react-router-dom';\n\n\nclass NewComment extends Component{\n\n    constructor(props){\n        super(props);\n        this.state ={\n            isLoading: true,\n            newComment: '',\n            user: '',\n            jwtToken:''\n            \n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.addComment = this.addComment.bind(this);\n        this.handleChange =this.handleChange.bind(this);\n        this.handleAuth = this.handleAuth.bind(this);\n    }\n\n    async addComment(ServiceID){\n        \n        await axios.post(apiEndpoint+'/service/'+ServiceID, {Comments: this.state.newComment },{headers: \n                        { 'Content-Type': 'application/json',\n                        'Authorization': `Bearer ${this.state.jwtToken}`}}\n                        ).then(res => {})\n                        .catch(e => console.log(e));\n        \n        console.log(this.state.user);\n        window.location =\"/results\";\n        // this.props.history.push({\n        //     pathname: \"/results\",\n        //     state: {\n        //     searchText: ServiceID,\n        //     }});\n        // window.location =\"/results\";\n            \n    }\n    async handleAuth (){\n        const token = new getToken();\n        await token.token()\n        this.setState({\n            user: token.state.user, \n            jwtToken: token.state.jwtToken\n        })\n        \n    } \n\n    \n\n    handleChange = event => {\n        this.handleAuth();\n        \n        const userlog = this.state.user;\n        console.log(this.state.user);\n        const target = event.target;\n        const value = target.value;\n        this.setState({newComment : {date: new Date(), By: userlog , text: value }});\n\n    }\n    handleSubmit = event => {\n        \n        event.preventDefault();\n        this.addComment(this.props.ServiceID);\n        \n        \n\n    }\n\n    render() {\n        \n                \n           return (\n           <div>\n            <Form onSubmit={this.handleSubmit}>\n                <Form.Group>\n                    <Form.Label>Add a Comment:</Form.Label>\n                    <Form.Control as=\"textarea\" name=\"textarea\" rows=\"5\" cols=\"80\" onChange = {this.handleChange}/>\n\n                </Form.Group>\n                 <Button variant=\"primary\" type=\"submit\">Submit</Button>\n            </Form>\n            </div>\n                \n                   \n           )\n       }\n}\n\nexport default withRouter(NewComment);","import GoogleMapReact from 'google-map-react';\nimport React, {Component} from 'react';\nimport { Icon } from 'semantic-ui-react';\n\n\nconst pinStyle={\n    borderRadius: '10px',\n    transform: 'matrix(-1, 0, 0, 1, 10, 0)'\n  }\n  const FacilityPin = (props) => {\n      return(\n        <div>\n          <Icon className=\"building icon\" \n            size='big' \n            style={pinStyle} \n            onClick={props.onClick}\n           />\n        </div>\n      )\n  }\nconst iconStyle = {  \n    borderRadius: '100px',  \n    boxShadow: '3px 3px 1px #888888'\n} \nconst CurrentPin = ({text}) => {  \n   return(\n      <div>\n        <Icon name=\"user circle outline\" \n         color='blue' \n         size='big' \n         style={iconStyle}\n        />      \n        {text} \n       </div> \n    )\n}\n\nclass GMaps extends Component {\n\n    constructor(props){\n        super(props);\n        this.state ={\n            key: process.env.REACT_APP_GM_KEY,\n            center: this.props.Coordinates,\n            lat: this.props.Coordinates.lat,\n            lng: this.props.Coordinates.lng,\n            zoom: 15,\n            \n        }\n       \n    }\n        // this.handleSearch(props);\n        \n   // }\n    // handleSearch(newSearch){\n    //     if (newSearch===true){\n\n    //        this.componentWillUnmount();\n    //     }\n   // }\n    // componentWillUnmount() {\n    //     console.log('Google maps will be unmount')\n    //     clearInterval(this.interval);\n    // }\n    \n\n    \n    render (){\n        \n        console.log(this.state.lat, this.state.lng)\n        return(\n            <div style={{ height: '29vh', width: '100%' }}> \n                <GoogleMapReact\n                bootstrapURLKeys={{ key: this.state.key}}\n                defaultCenter= {this.state.center}\n                defaultZoom= {this.state.zoom}\n                yesIWantToUseGoogleMapApiInternals\n                \n                >{FacilityPin}<CurrentPin lat={this.state.lat} lng={this.state.lng} />\n              </GoogleMapReact>\n            </div>\n\n\n\n        )\n\n\n    }\n}\n\nexport default GMaps;","import React, {Component} from 'react';\nimport {Card, Table, Accordion, Button, FormControl, Form, Col, ProgressBar, Row} from 'react-bootstrap';\nimport Styled from 'styled-components';\nimport {withRouter} from 'react-router-dom';\nimport axios from 'axios';\nimport getToken from '../../Auth/getToken';\nimport  apiEndpoint  from '../../Config/backendConfig';\n\n\nconst TableStyle = Styled.div`\n    \n    overflow-y: scroll;\n    height: 200px;\n    \n    `;\n\n\n\nclass Archives extends Component{\n\n constructor(props){\n     super(props);\n     this.state ={\n         file: null,\n         filename: '',\n         UploadUrl: '',\n         FileDescription:'',\n         user:'',\n         jwtToken:'',\n         filesOn: [],\n         DescriptionArray: [],\n         uploadProgress: null\n\n     };\n     this.handleAuth(); \n     \n     \n     \n    }\n    //to assigne a props variable to state once the component is mount\n    UNSAFE_componentWillReceiveProps(props) {\n        this.setState({filesOn: props.url, DescriptionArray: props.descriptionArray});\n    }\n        \n    updateProgressBarValue(percentage){\n        \n        if (percentage !== 0){\n\n            return(<ProgressBar now={percentage} />)\n        }\n            \n        \n    }\n\n    getFiles(){\n        //console.log(this.state.filesOn)\n        \n       \n      \n\n           const archivesArray = this.state.filesOn;\n           const lstOfFiles = archivesArray.map((file) =>\n                            \n                                <tr>\n                                    <td>{archivesArray.indexOf(file)+1}</td>\n                                    <td>< a href={file}>{file.split(\".com/\")[1]}</a></td>\n                                    <td>{this.state.DescriptionArray[archivesArray.indexOf(file)]}</td>\n                                </tr>\n                            \n            )\n        \n            return lstOfFiles;\n        \n    }\n    handleFiles = event => {\n        // save file and filename on State\n        this.setState({\n            file: event.target.files[0], \n            filename: event.target.files[0]['name'] \n            });      \n    }\n\n    handleFileDescription = event => {\n        this.setState({FileDescription: event.target.value});\n        console.log(event.target.value)\n\n    }\n    handleFilesSubmit = event =>{\n        this.getSignedUrl();\n       \n        event.preventDefault();\n    }\n\n    async getSignedUrl(){\n        console.log(this.state.jwtToken);\n        //REQUESTING SIGNED URL\n        await axios.patch(apiEndpoint+'/item/'+this.props.serviceID+'?item=service&filename='+this.state.filename, \n                                {description: this.state.FileDescription },\n                                {headers:{ 'Content-Type': 'application/json',\n                                            'Authorization': `Bearer ${this.state.jwtToken}`}},\n                                \n                                            ).then(res => {\n                                                this.setState({UploadUrl: res.data.Url}); \n                                                console.log(this.state.UploadUrl);\n                                                this.UploadFile();\n                                            }).catch(e => {console.log(e)});\n        \n\n    }\n\n    async UploadFile(){\n        await axios.put(this.state.UploadUrl, this.state.file,{\n            onUploadProgress: (Progress) => {\n                   if (Progress.lengthComputable) {\n                           console.log(Progress.loaded + ' ' + Progress.total);\n                           if (Progress.total!==null){\n                                    this.setState({uploadProgress: Math.round((Progress.loaded *100)/Progress.total)})\n                                }\n                       }\n                 } \n            }).then(res => {\n                console.log(\"File has been uploaded\");\n                // this.props.history.push({\n                //             pathname: \"/results\",\n                //             state: {\n                //             searchText: this.props.serviceID}})\n                window.location =\"/results\";            \n            })\n              .catch(e => console.log(e))\n        \n    }\n\n    async handleAuth (){\n        const token = new getToken();\n        await token.token();\n        this.setState({\n            user: token.state.user, \n            jwtToken: token.state.jwtToken\n        })\n        \n    } \n\n\n\n\n    render(){\n       \n        \n        \n\n        \n        return(<div>\n            <Row>\n                <Col>\n                <Card style={{ width: '30rem' }}> \n                   <Card.Header>Archives</Card.Header>\n                   <Card.Text><TableStyle>\n                   <Table striped bordered hover>\n                    <thead>\n                            <tr>\n                            <th>#</th>\n                            <th>File Name</th>\n                            <th>Description</th>\n                            </tr>\n                        </thead> \n                        <tbody>\n                           {this.getFiles()}\n                        </tbody>\n                       \n                    </Table> </TableStyle>\n                    </Card.Text>\n                </Card>\n                </Col>\n                <Col >\n               \n                <Accordion>\n                    <Card style={{ width: '30rem' }}>\n                        <Card.Header>\n                            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                            <Button variant=\"primary\" type=\"submit\">Add a file</Button> \n                            </Accordion.Toggle>\n                                {this.updateProgressBarValue(this.state.uploadProgress)}\n                        </Card.Header>\n                            <Accordion.Collapse eventKey=\"0\">\n                            <Card.Body>\n                            \n                                <Form >\n                                    <Form.Row>\n\n                                        <Form.Group as={Col} controlId=\"FileDescr\">\n                                            <Form.Label>Description</Form.Label>\n                                            <FormControl name=\"Description\" type=\"text\" onChange = {this.handleFileDescription} /> \n                                        </Form.Group> \n                                        \n                                        <Form.Group as={Col} controlId=\"File\">\n                                            <Form.Label>File to Upload</Form.Label>\n                                            <FormControl name=\"files\" type=\"file\" onChange={this.handleFiles}/>\n                                        </Form.Group>\n                                    </Form.Row>\n                                </Form>\n                                \n                                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n                                <Button variant=\"primary\" type=\"submit\" onClick={this.handleFilesSubmit}>Upload</Button> \n                                </Accordion.Toggle>\n                            </Card.Body>\n                            </Accordion.Collapse>\n                    </Card>\n                </Accordion>\n                \n                </Col>\n                </Row>\n                </div>\n                    \n                   \n\n               \n               \n               \n            \n        )\n    }\n}\n\nexport default withRouter(Archives);","import React, { Component } from \"react\";\nimport getToken from \"../../Auth/getToken\";\nimport {Nav, Navbar, Form, FormControl, Col, Table, Modal, Button} from 'react-bootstrap';\nimport axios from 'axios';\nimport  apiEndpoint  from '../../Config/backendConfig';\n\nclass EditCustomer extends Component{\n\n\n    constructor(props){\n        super(props);\n        this.state={\n            CustomerName: this.props.customer.CustomerName, SiteNumber:this.props.customer.SiteNumber, Address:this.props.customer.Address, \n            City:this.props.customer.City, Province:this.props.customer.Province, PostalCode:this.props.customer.PostalCode, \n            ContactName:this.props.customer.ContactName,\n            Phone:this.props.customer.Phone, CustomerID:this.props.customer.CustomerID,\n            jwtToken:\"\",\n            user:\"\",\n            show: true,\n        };\n        this.updateCustomer= this.updateCustomer.bind(this);\n\n\n    }\n\n    async handleAuth (){\n        const token = new getToken();\n        await token.token()\n        this.setState({\n            user: token.state.user, \n            jwtToken: token.state.jwtToken\n        })  \n    } \n\n\n    handleImput = event => {\n        this.handleAuth();\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        \n        this.setState({[name] : value })\n        // console.log(this.state.SiteNumber);\n    }\n\n    handleClose = () => {\n        \n        this.setState({show: false});\n        window.location =\"/results\"; \n\n    }\n\n    async updateCustomer(){\n        console.log(this.state.jwtToken)\n        \n        const customer = {\n            CustomerName: this.state.CustomerName,\n            SiteNumber : this.state.SiteNumber,\n            Address: this.state.Address,\n            City: this.state.City,\n            Province: this.state.Province,\n            Phone: this.state.Phone,\n            PostalCode: this.state.PostalCode,\n            ContactName: this.state.ContactName,\n            CustomerID: this.state.CustomerID\n        }\n       \n        await axios.patch(apiEndpoint+'/customer/'+this.state.CustomerID, \n                            customer,\n                            {headers: \n                                    { 'Content-Type': 'application/json',\n                                      'Authorization': `Bearer ${this.state.jwtToken}`}}\n                            ).then(res => {this.handleClose()})\n                            .catch(e => console.log(e));\n\n    }\n\n    render() {\n       \n\n        return (<div>\n                        <Modal show={this.state.show} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n                        <Modal.Header>\n                            <Modal.Title id=\"contained-modal-title-vcenter\">\n                            Customer Update\n                            </Modal.Title>\n                        </Modal.Header>\n                         <Modal.Body>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"CustomerName\" >\n                                <Form.Label>Customer</Form.Label>\n                                <Form.Control type=\"text\" placeholder={this.state.CustomerName} onChange = {this.handleImput} name=\"CustomerName\"/>\n                                </Form.Group>\n                                \n\n                                <Form.Group as={Col} controlId=\"SiteNumber\">\n                                <Form.Label>Site Number:</Form.Label>\n                                <Form.Control type=\"Site\" placeholder={this.state.SiteNumber} onChange = {this.handleImput} name=\"SiteNumber\"/>\n                                </Form.Group>\n                            </Form.Row>\n\n                            <Form.Group controlId=\"Address\">\n                                <Form.Label>Address</Form.Label>\n                                <Form.Control placeholder={this.state.Address} onChange = {this.handleImput} name=\"Address\" />\n                            </Form.Group>\n                                <Form.Row>\n                                    <Form.Group as={Col} controlId=\"City\">\n                                    <Form.Label>City</Form.Label>\n                                    <Form.Control onChange = {this.handleImput} name=\"City\" placeholder={this.state.City}/>\n                                    </Form.Group>\n\n                                    <Form.Group as={Col} controlId=\"Province\">\n                                    <Form.Label>Province</Form.Label>\n                                    <Form.Control as=\"select\" onChange = {this.handleImput} name=\"Province\" placeholder={this.state.Province}>\n                                        <option>Choose...</option>\n                                        <option>Alberta</option>\n                                        <option>British Columbia</option>\n                                    </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group as={Col} controlId=\"PostalCode\">\n                                    <Form.Label>Postal Code</Form.Label>\n                                    <Form.Control onChange = {this.handleImput} name=\"PostalCode\" placeholder={this.state.PostalCode}/>\n                                    </Form.Group>\n                                </Form.Row>\n                                <Form.Row>\n                                    <Form.Group as={Col} controlId=\"ContactName\">\n                                        <Form.Label>Contact Name:</Form.Label>\n                                        <Form.Control placeholder={this.state.ContactName}  onChange = {this.handleImput} name=\"ContactName\"/> \n                                    </Form.Group>\n                                    <Form.Group as={Col} controlId=\"Phone\">\n                                        <Form.Label>Phone:</Form.Label>\n                                        <Form.Control placeholder={this.state.Phone}  onChange = {this.handleImput} name=\"Phone\"/> \n                                    </Form.Group>\n                                </Form.Row>\n                                        \n\n                        </Modal.Body>\n                        <Modal.Footer>\n                        <Button onClick={this.updateCustomer}>Update</Button>\n                        <Button onClick={this.handleClose}>Close</Button>\n                        </Modal.Footer> \n                         </Modal>\n                    </div>\n                        \n                )\n\n\n\n    }\n\n}\n\nexport default EditCustomer;","import React, {Component} from 'react';\nimport axios from 'axios';\nimport getToken from '../../Auth/getToken'\nimport styled from 'styled-components';\nimport NewComment from './AddComment';\nimport {Card, Button, Spinner, Nav, Navbar, Form, Modal, Container, Row, Col} from 'react-bootstrap';\nimport GMaps from './googleMaps';\nimport Geocode from 'react-geocode';\nimport Archives from './Archives';\nimport  apiEndpoint  from '../../Config/backendConfig';\nimport EditCustomer from '../../Components/Customer/EditCustomer';\nimport '../../App.css';\n\n\n\nconst CommentStyle = styled.div`          \n    \n    margin: 16px ;\n    position: relative;                             \n    `;\n\nconst IdNumber = styled.h1`\n    font-size: 1.2em;\n    position: relative;\n    `;\nconst Wrapper = styled.div`\n    font-size: 1em;\n    position: relative;\n    `;\nconst Customer = styled.div`\n    text-align: left;\n    position: relative;\n     \n    `;\nconst Maps = styled.div`\n    text-align: left;\n    position: relative;     \n    `;\n const Comments = styled.div`\n    overflow: auto;\n    position: relative; \n    height: 300px;\n    \n `;\n\n const Attach = styled.div`\n    position: relative;\n    height: 300px;\n    text-align: left;\n    top: 20px;\n `;\n\n const NewCommentpos = styled.div`\n    position: relative;\n    font-size: 14px;\n `;\n \n\n\nclass GetItembyID extends Component {\n\n\n   \n   constructor(props){\n       super(props);\n       this.state ={\n           isLoading: true,\n           \n           ticket:[],\n           Comments: [],\n           CustomerId: \"\", CustomerName: \"\", SiteNumber:\"\", Address:\"\", City:\"\", Province:\"\",PostalCode:\"\", ContactName:\"\", Phone:\"\", \n           zoom : 8,\n           Addressfull: \"\",\n           coordinates: null,\n           newSearch: false,\n           editCustomer: false,\n           reload: false,\n           \n       };\n       \n       \n   }\n\n   handleSearch() {\n    \n        let newSearchText = this.props.location.state.searchText;\n        //console.log(newSearchText);\n        \n        this.getItem(newSearchText,\"service\");\n       // console.log(this.state.searchText);\n        \n  };\n\n  componentDidMount() {\n   \n    this.handleSearch();\n  }\n\n  \n\n  componentDidUpdate(prevProps) {\n    \n    let prevSearch = prevProps.location.state.searchText;\n    console.log(\"Prev Search: \",prevSearch)\n    let newSearchText = this.props.location.state.searchText;\n    console.log(\"new Search: \",newSearchText)\n    if (prevSearch !== newSearchText) {\n        this.setState({newSearch: true})\n        this.handleSearch();             \n    }\n    if (this.state.newSearch === true){\n        console.log(\"new search is true\" )\n        this.handleSearch();  \n    }\n\n  }\n\n  handleMaprequest(){\n    \n    if (this.state.coordinates!==null) {\n        if (this.state.newSearch===true){\n            console.log(\"new search, reseting google maps\")\n            this.setState({ coordinates: null, newSearch : false,})\n            \n            return (<div>\n                <Spinner animation=\"border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n            </div>)\n        }else {\n            console.log(\"first search, Starting google maps\")\n            return(\n                <div>\n                    <GMaps Coordinates={this.state.coordinates}/>\n                </div>\n            )\n        }\n    }\n    else {\n            console.log(\"No coordinates \");\n            return(<div><Spinner animation=\"border\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n            </Spinner></div>)\n        }\n}\n\n  handleGeolocation() {\n        this.setState({Addressfull: this.state.Address +\" \"+ this.state.City +\" \"+ this.state.Province +\" \"+ this.state.PostalCode})\n        Geocode.setApiKey(process.env.REACT_APP_GM_KEY);\n        const customerAddress = this.state.Addressfull;\n        Geocode.fromAddress(customerAddress).then(\n        response => {\n                const { lat, lng } = response.results[0].geometry.location;\n                //console.log(lat, lng);\n                \n                this.setState({coordinates:{lat: lat, lng:lng}}); \n                }).catch(error => {console.error(error)}); \n\n\n    }\n    \n    editButton = () => {\n        this.setState({editCustomer: true})\n\n    }\n    handleCustomerEdit(){\n        let customer = null;\n        if (this.state.editCustomer){\n            customer = {\n                CustomerName: this.state.CustomerName,\n                SiteNumber : this.state.SiteNumber,\n                Address: this.state.Address,\n                City: this.state.City,\n                Province: this.state.Province,\n                Phone: this.state.Phone,\n                PostalCode: this.state.PostalCode,\n                ContactName: this.state.ContactName,\n                CustomerID: this.state.CustomerId\n            }\n            \n            return(\n                <EditCustomer customer={customer}/>\n            )\n        }\n    }\n      \n   async getItem(ID, type){\n       \n        const token = new getToken();\n        await token.token()\n        //console.log(token.state)\n        \n        await axios.get(apiEndpoint+'/item/'+ID+'?item='+type, {headers: \n                    { 'Content-Type': 'application/json',\n                      'Authorization': `Bearer ${token.state.jwtToken}`}}\n                      ).then(res => {\n                                        if (type===\"service\"){\n                                        this.setState({ \n                                        isLoading: false, ticket :res.data.ticket[0], \n                                        Comments: res.data.ticket[0]['Comments'],\n                                        CustomerId:res.data.ticket[0]['CustomerID'] });\n                                        \n                                        this.getItem(this.state.CustomerId,\"customer\")\n                                        } else {\n                                            this.setState({\n                                                CustomerName: res.data.customer[0]['CustomerName'], \n                                                SiteNumber: res.data.customer[0]['SiteNumber'],\n                                                Address: res.data.customer[0]['Address'],\n                                                City: res.data.customer[0]['City'],\n                                                Province: res.data.customer[0]['Province'],\n                                                PostalCode: res.data.customer[0]['PostalCode'], \n                                                ContactName: res.data.customer[0]['ContactName'],\n                                                Phone: res.data.customer[0]['Phone'],\n                                                \n                                            })\n                                            this.handleGeolocation();\n     \n\n                                        }\n                                        \n                                    })\n                      .catch(e => {console.log(e); alert(\"No Ticket or Customer has been found\");\n                                    window.location = \"/Services\"})  \n        //window.location =\"/results\"; \n                            \n                                                                               \n        }\n\n    \n   \n    render() {\n    \n    const showMap = this.handleMaprequest();\n    const customerEdit= this.handleCustomerEdit();\n        \n            \n        \n    \n        \n        \n    \n     const CommentsArray = this.state.Comments;\n     const lstComments = CommentsArray.map((comment) =>  \n            \n        <div key={CommentsArray.indexOf[comment]}> \n        <CommentStyle>\n            <Card style={{ width: '35rem' }}>\n            <Card.Body>\n            <Card.Title>Date: {comment['date']} </Card.Title>\n            <Card.Subtitle className=\"mb-2 text-muted\">By: {comment['By']}</Card.Subtitle>\n                    <Card.Text>\n                        {comment['text']}\n                    </Card.Text>\n            </Card.Body>\n            </Card>\n        </CommentStyle>\n        </div>\n        ); \n     \n       \n        return (\n        <div>\n            \n            <Container>\n        \n           \n            <Row>\n                <Col>\n                    <IdNumber className=\"hr\"> <hr/>Ticket Number: {this.state.ticket.ServiceID}</IdNumber>\n                </Col>\n            </Row>\n            <Row >\n                <Col>\n                <Customer> \n            \n                <Card style={{ width: '30rem' }}>     \n                \n                <Card.Body>\n                    <Card.Title>{this.state.CustomerName} </Card.Title>\n                    <Card.Text>\n                    \n                    <p> Site Number: {this.state.SiteNumber}</p>\n                    <p>{this.state.Address}  {this.state.City}, {this.state.Province} , {this.state.PostalCode}</p>\n                    <p> Contact: {this.state.ContactName},   Phone : {this.state.Phone}</p>\n                    </Card.Text>\n                    <Button variant=\"primary\" onClick={this.editButton}>edit</Button>\n                </Card.Body>\n                </Card>\n                </Customer>\n                <Wrapper>\n                <Card style={{ width: '30rem' }}>\n                <Card.Body >\n                    <Card.Title> {this.state.ticket.Title} </Card.Title>\n                    \n                    <Card.Text>\n                        <p>Description:</p>\n                    {this.state.ticket.Description}\n                    </Card.Text>\n                     \n                </Card.Body>\n                </Card>\n                </Wrapper>\n                </Col>\n                \n                <Col>\n                <Maps>\n                    <Card style={{ width: '30rem'}}>\n                    {showMap}\n                    </Card>\n                </Maps>\n                </Col>\n           </Row>\n           <Row>\n                <Col> \n                <div > <hr/> </div>\n                </Col>\n            \n            </Row>\n           <Row>\n                <Col >\n                <Comments>\n                <Card> \n                   <Card.Header>Comments</Card.Header>\n                    {lstComments}\n                </Card>\n                </Comments>\n                </Col>\n                <Col >\n                <NewCommentpos><NewComment ServiceID={this.state.ticket.ServiceID} /></NewCommentpos>\n                {customerEdit}\n                \n                </Col>\n           </Row>\n           <Row>\n                <Col> \n                <div > <hr/> </div>\n                </Col>\n            \n            </Row>\n            \n           <Attach>\n                <Archives url={this.state.ticket.attachmentUrl} descriptionArray={this.state.ticket.fileDescription} serviceID={this.state.ticket.ServiceID}/>\n            </Attach>\n            <Row>\n                <Col> \n                <div > <hr/> </div>\n                </Col>\n            \n            </Row>\n            \n            </Container>\n           \n        </div> \n               \n        )\n    }\n}\n   \n\n    \n   \nexport default GetItembyID;","import React, {Component} from 'react';\nimport {Button, Card} from 'react-bootstrap';\nimport {Nav, Navbar, Form, FormControl, Col, Table, Modal, Container} from 'react-bootstrap';\nimport {BrowserRouter, Route, Switch, withRouter, Redirect} from 'react-router-dom';\nimport axios from 'axios';\nimport getToken from '../../Auth/getToken'\nimport styled from 'styled-components';\nimport  apiEndpoint  from '../../Config/backendConfig';\n\n\nconst ServiceStyle = styled.div` \n    display: block;            \n    \n    \n    margin: 16px ;\n    border: 1px solid #DCDCDC;\n    box-shadow: 0 2px 3px #ccc;\n    padding: 10px;\n    text-align: left;\n    position: relative;\n    word-wrap: break-word;\n    \n    overflow: auto;              \n                  `;\n\n    \n\nclass Services extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            chkNewCustomer: false,\n            CustomerName: \"\", SiteNumber:\"\", Address:\"\", City:\"\", Province:\"\",PostalCode:\"\", ContactName:\"\", Phone:\"\", CustomerID:\"\",\n            Title: \"\", Description:\"\", Status:\"\", PriorityLevel:\"\", CreatedBy:\"\", \n            jwtToken:\"\",\n            CustomMessage:\"\",\n            user:\"\",\n            customerSearchlst: null,\n            modalShow: false\n\n\n        };\n\n    }\n\n    handleChk = () =>{\n       if (this.state.chkNewCustomer===false){\n        this.setState({chkNewCustomer : true});\n       } else{\n        this.setState({chkNewCustomer : false});\n       }\n\n    }\n\n    handleCustomerSubmit =event =>{\n        //console.log(this.state.Customer);\n        \n        if (this.state.chkNewCustomer){\n        \n        const newCustomer = {\n            CustomerName: this.state.CustomerName,\n            SiteNumber : this.state.SiteNumber,\n            Address: this.state.Address,\n            City: this.state.City,\n            Province: this.state.Province,\n            Phone: this.state.Phone,\n            PostalCode: this.state.PostalCode,\n            ContactName: this.state.ContactName\n           }\n        this.createItem(newCustomer,\"customer\");\n        event.preventDefault();\n        } else {\n            this.searchCustomer(this.state.CustomerName);\n            event.preventDefault();\n\n\n\n\n        }\n        \n    }\n\n    handleServiceSubmit = event =>{\n        const newService= {\n            CustomerID: this.state.CustomerID,\n            Title: this.state.Title, \n            Description: this.state.Description,\n            Status: this.state.Status, \n            PriorityLevel: this.state.PriorityLevel, \n            CreatedBy: this.state.user\n        }\n        this.createItem(newService,\"service\");\n        event.preventDefault();\n        \n    }\n\n    handleImput = event => {\n        this.handleAuth();\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        \n        this.setState({[name] : value });\n    }\n    \n    \n    async handleAuth (){\n        const token = new getToken();\n        await token.token()\n        this.setState({\n            user: token.state.user, \n            jwtToken: token.state.jwtToken\n        })  \n    } \n    \n    async createItem(NewItem, type ){\n        \n        console.log(NewItem);\n        await axios.post(apiEndpoint+'/item?item='+type, \n                        NewItem,\n                        {headers: \n                            { 'Content-Type': 'application/json',\n                            'Authorization': `Bearer ${this.state.jwtToken}`}\n                        }\n                            ).then(res => {\n                                if (type===\"customer\"){\n                                this.setState({CustomerID:res.data.item.CustomerID, CustomMessage: \"Customer has been Created.\"})\n                                ;console.log(res.data.item.CustomerID)\n                                }else {\n                                    console.log(res.data.item.ServiceID);\n                                    this.setState({CustomMessage: \"Service has been Created.\"});\n                                    this.props.history.push({\n                                        pathname: \"/results\",\n                                        state: {\n                                          searchText: res.data.item.ServiceID\n                                        }});\n                                    //window.location =\"/Results\";\n                                    \n                                }\n                            })\n                            .catch(e => {alert(\"Customer not created, it might already exists\",e); console.log(e)});\n        \n        \n    }\n\n    async searchCustomer(CustomerName){\n       // console.log(CustomerName)\n        await axios.get(apiEndpoint+'/customername/'+CustomerName,  \n        \n                {headers: \n                    { 'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${this.state.jwtToken}`}\n                }).then(res => {this.setState({customerSearchlst: res.data.customer, modalShow: true}); console.log(res.data.customer)})\n                  .catch(e => console.log(e))\n\n\n    }\n    \n    showCustomerSearch(){\n        \n        let customerLst= this.state.customerSearchlst;\n        const lstOfCustomers = customerLst.map((customer) =>\n                \n                <tr className='clickable-row' onClick={() => this.chooseCustomer(customer)}>    \n                \n                    <td >{customerLst.indexOf(customer)+1}</td>\n                    <td>{customer.CustomerName}</td>\n                    <td>{customer.SiteNumber}</td>\n                    <td>{customer.City}</td>\n                    <td>{customer.Province}</td>\n                    <td>{customer.ContactName}</td>\n                    <td>{customer.Phone}</td>\n                \n                </tr>\n                )\n        return lstOfCustomers;\n    }\n\n    chooseCustomer(customer){\n        this.setState({CustomerName: customer.CustomerName, SiteNumber: customer.SiteNumber, Address: customer.SiteNumber, \n                        City: customer.City, Province: customer.Province,PostalCode:customer.PostalCode, ContactName: customer.ContactName, \n                        Phone: customer.Phone, CustomerID: customer.CustomerID, modalShow: false, customerSearchlst: null })\n\n\n    }\n    \n    ModalList(){\n        \n        let show = false;\n        const handleClose = () => {\n            show= false;\n            this.setState({modalShow: false, customerSearchlst: null});\n        }\n        \n        if (this.state.customerSearchlst && this.state.modalShow){\n            show = true;\n            console.log(\"dentro del if\")\n             return( \n                        <Modal show={show} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n                            <Modal.Header closeButton>\n                                <Modal.Title id=\"contained-modal-title-vcenter\">\n                                Search Result\n                                </Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>\n                            \n                                        <Table striped bordered hover>\n                                            <thead>\n                                                <tr>\n                                                <th>#</th>\n                                                <th>Customer Name</th>\n                                                <th>Site Number</th>\n                                                <th>City</th>\n                                                <th>Province</th>\n                                                <th>Contact Name</th>\n                                                <th>Phone</th>\n                                                </tr>\n                                            </thead> \n                                            <tbody>\n                                                {this.showCustomerSearch()}\n                                            </tbody>\n                                        </Table>\n\n                            </Modal.Body>\n                            <Modal.Footer>\n                                <Button onClick={handleClose}>Close</Button>\n                            </Modal.Footer>\n                            </Modal>\n                            \n            )}\n        }\n\n    render() {\n        \n        let butText =\"\"\n        let formNewCust = null;\n        if (this.state.chkNewCustomer){\n            butText = \"Submit\";\n            formNewCust = \n            ( <div>\n                    <Form.Group controlId=\"Address\">\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control placeholder={this.state.Address} onChange = {this.handleImput} name=\"Address\" />\n                </Form.Group>\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"City\">\n                    <Form.Label>City</Form.Label>\n                    <Form.Control onChange = {this.handleImput} name=\"City\" placeholder={this.state.City}/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Province\">\n                    <Form.Label>Province</Form.Label>\n                    <Form.Control as=\"select\" onChange = {this.handleImput} name=\"Province\" placeholder={this.state.Province}>\n                        <option>Choose...</option>\n                        <option>Alberta</option>\n                        <option>British Columbia</option>\n                    </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"PostalCode\">\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control onChange = {this.handleImput} name=\"PostalCode\" placeholder={this.state.PostalCode}/>\n                    </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"ContactName\">\n                        <Form.Label>Contact Name:</Form.Label>\n                        <Form.Control placeholder={this.state.ContactName}  onChange = {this.handleImput} name=\"ContactName\"/> \n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"Phone\">\n                        <Form.Label>Phone:</Form.Label>\n                        <Form.Control placeholder={this.state.Phone}  onChange = {this.handleImput} name=\"Phone\"/> \n                    </Form.Group>\n                </Form.Row>\n                </div>\n            );\n\n        } else {\n            butText = \"Search\";\n        }\n        \n\n        return (\n            <Container>\n                \n                <ServiceStyle>\n                <Col>\n                <Form onSubmit ={this.handleCustomerSubmit}>\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"CustomerName\" >\n                        <Form.Label>Customer</Form.Label>\n                        <Form.Control type=\"text\" placeholder={this.state.CustomerName} onChange = {this.handleImput} name=\"CustomerName\"/>\n                        </Form.Group>\n                        \n\n                        <Form.Group as={Col} controlId=\"SiteNumber\">\n                        <Form.Label>Site Number:</Form.Label>\n                        <Form.Control type=\"Site\" placeholder={this.state.SiteNumber} onChange = {this.handleImput} name=\"SiteNumber\"/>\n                        </Form.Group>\n                    </Form.Row>\n                    {formNewCust}\n                \n\n                        <Form.Group id=\"formGridCheckbox\">\n                            <Form.Check type=\"checkbox\" label=\"New Customer\" onClick= {this.handleChk} />\n                        </Form.Group>\n\n                        <Button variant=\"primary\" type=\"submit\" >\n                            {butText}\n                        </Button>\n                        <div> {this.state.CustomMessage}</div>\n                </Form>\n                </Col>\n                </ServiceStyle>\n                \n                \n                <ServiceStyle>\n                <Col>\n                <Form onSubmit ={this.handleServiceSubmit}>\n                \n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridTtitle\">\n                    <Form.Label>Title</Form.Label>\n                    <Form.Control type=\"Title\" name=\"Title\" onChange = {this.handleImput}/>\n                    </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridPrioritty\">\n                    <Form.Label>Priority Level</Form.Label>\n                    <Form.Control as=\"select\" name=\"PriorityLevel\" onChange = {this.handleImput}>\n                        <option>...Choose</option>\n                        <option>Normal (5 days)</option>\n                        <option>Level 1 (3 days)</option>\n                        <option>Level 2 (next day)</option>\n                        <option>Critical Level (5 hours)</option>\n                    </Form.Control> \n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridStatus\">\n                    <Form.Label>Status</Form.Label>\n                    <Form.Control as=\"select\" name=\"Status\" onChange = {this.handleImput}>\n                        <option>...Choose</option>\n                        <option>Create</option>\n                    </Form.Control>\n                    </Form.Group>\n                </Form.Row>\n                <Form.Group controlId=\"description\">\n                    <Form.Label>Description:</Form.Label>\n                    <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Enter a brief description for this ticket\" name=\"Description\" onChange = {this.handleImput}/>\n                </Form.Group>\n\n                <Button variant=\"primary\" type=\"submit\">\n                    Create\n                </Button>\n                </Form>\n                </Col>\n                </ServiceStyle>\n                {this.ModalList()}\n                \n                </Container>\n                \n        \n        )\n    }\n\n}\n\nexport default Services; ","import React, {Component} from 'react';\nimport {Button, Container} from 'react-bootstrap';\nimport styled from 'styled-components';\nimport Customers from  './Components/Customer/Customers'\nimport GetItembyID from './Components/Services/GetItembyId';\nimport Services from './Components/Services/Services';\nimport {BrowserRouter, Route, Switch, withRouter} from 'react-router-dom';\nimport {Nav, Navbar, Form, FormControl, Row, Col} from 'react-bootstrap';\nimport { Authenticator, Greetings } from 'aws-amplify-react';\n\nimport './App.css';\n\n\nconst AuthStyle = styled.div`\n    width: 300px;\n    margin: 10px ;\n   `;\n  \n\nclass Header extends React.Component{\n\n  \n    state ={\n        searchText: \"\",\n    };\n    \n  handleRoute = route => () => {\n      this.props.history.push({ pathname: route })\n      \n    };\n  \n  \n  handleSearchSubmit = (event) => {\n      \n      if (this.state.searchText) {\n        \n        this.props.history.push({\n          pathname: \"/results\",\n          state: {\n            searchText: this.state.searchText\n          }\n          \n        });\n        \n      } else {\n        alert(\"Please enter a Ticket Number\");\n      }\n      \n    };\n\n  \n  handleSearchInput = event => {\n\n    this.setState({searchText: event.target.value})\n    console.log(event.target.value)\n        \n  }\n  handleEnter = event =>{\n    console.log(event.key)\n    if (event.key === \"Enter\"){\n      event.preventDefault();\n      this.handleSearchSubmit();\n    }\n  }\n \n  \n \n\n  render(){\n    \n    return(\n      <Row>\n        <Container>\n          \n          <Navbar bg=\"light\" variant=\"light\">\n          \n            <Navbar.Brand>\n              <a href='https://www.juadel.com'>SERVICE MANAGER</a>\n            </Navbar.Brand> \n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              {/* <Nav.Link onClick={this.handleRoute(\"/Dashboard\")}>Dashboard</Nav.Link> */}\n              <Nav.Link onClick={this.handleRoute(\"/Services\")}>New Service</Nav.Link>\n              {/* <Nav.Link onClick={this.handleRoute(\"/Customers\")}>Customers</Nav.Link> */}\n            </Nav>\n            </Navbar.Collapse>\n            \n            \n            <Form inline>\n              <FormControl type=\"text\" placeholder=\"Ticket Number\" className=\"mr-sm-2\" value={this.state.searchText} onChange={this.handleSearchInput} onKeyPress={this.handleEnter}  />\n              <Button className=\"btn-search\" variant=\"outline-info\" onClick={this.handleSearchSubmit}>Search</Button> \n            </Form>\n            \n          \n                 \n            <AuthStyle><Authenticator hideDefault={true}><Greetings inGreeting={(username) => 'Hello ' + username} /></Authenticator></AuthStyle>\n            \n          </Navbar>\n          <Switch>\n            {/* <Route path=\"/Dashboard\" component= {Dashboard}/> */}\n            <Route path=\"/Services\" component= {Services}/>\n            {/* <Route path=\"/Customers\" component= {Customers}/> */}\n            <Route path=\"/Results\" component={GetItembyID}/>\n         </Switch>\n        </Container>\n        </Row>\n          \n      \n    )\n  \n  \n  }\n}\nexport default withRouter(Header);\n\nclass Dashboard extends Component{\n    render(){\n      return(\n        <div>\n          jυadel\n        </div>\n      )\n    }\n  }\n  \n  ","import React, {Component} from 'react';\nimport Amplify from 'aws-amplify';\nimport cognito from './Auth/Cognito';\nimport {BrowserRouter} from 'react-router-dom';\nimport { withAuthenticator, Authenticator, Greetings } from 'aws-amplify-react';\nimport Header from './Header';\nimport Services from './Components/Services/Services';\nimport './App.css';\nimport GetItembyID from './Components/Services/GetItembyId';\n\n\nAmplify.configure(cognito);\n\n  \n\nclass App extends Component {\n  \n  \n\n  render(){\n  return (\n    <div>\n      <BrowserRouter>\n      <Header>\n      {Services}\n      </Header>\n      </BrowserRouter>\n    </div>\n  );\n}\n}\nexport default withAuthenticator(App, false);\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}