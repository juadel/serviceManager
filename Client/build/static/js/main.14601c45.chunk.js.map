{"version":3,"sources":["Auth/Cognito.js","Components/Customer/Customers.js","Auth/getToken.js","Config/backendConfig.js","Components/Services/AddComment.js","Components/Services/googleMaps.js","Components/Services/Archives.js","Components/Customer/EditCustomer.js","Components/Services/GetItembyId.js","Components/Services/Services.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["Cognito","Auth","region","userPoolId","userPoolWebClientId","Component","getToken","state","jwtToken","user","token","currentSession","then","data","idToken","catch","e","console","log","currentAuthenticatedUser","username","apiEndpoint","NewComment","props","handleChange","event","handleAuth","userlog","value","target","setState","newComment","date","Date","By","text","handleSubmit","preventDefault","addComment","ServiceID","isLoading","bind","axios","post","Comments","this","headers","res","window","location","Form","onSubmit","Group","Label","Control","as","name","rows","cols","onChange","Button","variant","type","GMaps","key","process","coordinates","Coordinates","zoom","handleSearch","newSearch","componentWillUnmount","clearInterval","interval","style","height","width","bootstrapURLKeys","defaultCenter","defaultZoom","TableStyle","Styled","div","Archives","handleFiles","file","files","filename","handleFileDescription","FileDescription","handleFilesSubmit","getSignedUrl","UploadUrl","filesOn","DescriptionArray","uploadProgress","url","descriptionArray","percentage","ProgressBar","now","archivesArray","map","indexOf","href","split","patch","serviceID","description","Url","UploadFile","put","onUploadProgress","Progress","lengthComputable","loaded","total","Math","round","Row","Col","Card","Header","Text","Table","striped","bordered","hover","getFiles","Accordion","Toggle","eventKey","updateProgressBarValue","Collapse","Body","controlId","FormControl","onClick","EditCustomer","handleImput","handleClose","show","CustomerName","customer","SiteNumber","Address","City","Province","PostalCode","ContactName","Phone","CustomerID","updateCustomer","Modal","size","aria-labelledby","centered","Title","id","placeholder","Footer","CommentStyle","styled","IdNumber","h1","Wrapper","Customer","Maps","Attach","NewCommentpos","GetItembyID","editButton","editCustomer","ticket","CustomerId","Addressfull","newSearchText","searchText","getItem","prevProps","Spinner","animation","role","className","Geocode","setApiKey","customerAddress","fromAddress","response","results","geometry","lat","lng","error","ID","get","handleGeolocation","alert","showMap","handleMaprequest","customerEdit","handleCustomerEdit","CommentsArray","lstComments","comment","Subtitle","Container","Description","sm","attachmentUrl","fileDescription","ServiceStyle","Services","handleChk","chkNewCustomer","handleCustomerSubmit","newCustomer","createItem","searchCustomer","handleServiceSubmit","newService","Status","PriorityLevel","CreatedBy","CustomMessage","customerSearchlst","modalShow","NewItem","item","history","push","pathname","customerLst","chooseCustomer","closeButton","showCustomerSearch","butText","formNewCust","Check","label","ModalList","AuthStyle","handleRoute","route","handleSearchSubmit","handleSearchInput","Navbar","bg","Brand","aria-controls","Nav","Link","inline","hideDefault","inGreeting","path","component","React","withRouter","Amplify","configure","cognito","App","withAuthenticator","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.14601c45.chunk.js","sourcesContent":["const Cognito = {\n    Auth: {\n      // Amazon Cognito Region\n      region: \"ca-central-1\",\n  \n      // Amazon Cognito User Pool ID\n      userPoolId: \"ca-central-1_y3i0Krt0j\",\n  \n      // Amazon Cognito Web Client ID (26-char alphanumeric string)\n      userPoolWebClientId: \"7lp0df6po0f0fjj0qs2h8lqpva\"\n    }\n  };\n  \n  export default Cognito;","import React, {Component} from 'react';\n\nclass Customers extends Component{\n    render(){\n        return (\n            <div>\n                <h1>\n                    Next Customer\n                </h1>\n            </div>\n        );\n\n    }\n\n}\n\nexport default Customers;","import { Auth } from 'aws-amplify';\nimport React, {Component} from 'react';\n\nclass getToken extends Component {\n\n    constructor(){\n        super();\n        this.state ={\n            jwtToken :\"\",\n            user :\"\"\n                    };\n        this.token();\n    }\n    async token(){\n        \n        await Auth.currentSession()\n                .then(data => {this.state.jwtToken = data.idToken.jwtToken })\n                .catch(e => console.log(e))\n        await Auth.currentAuthenticatedUser()\n                .then(user => {this.state.user = user.username})\n                .catch(e => console.log(e))\n                  //console.log(this.state.jwtToken)\n        \n        \n    }\n\n\n}\n export default getToken;\n","\nconst apiId = 'fy9djecyw1'\nconst apiEndpoint = `https://${apiId}.execute-api.ca-central-1.amazonaws.com/dev`;\n\nexport default apiEndpoint;","import React, {Component} from 'react';\nimport axios from 'axios';\nimport getToken from '../../Auth/getToken';\nimport {Form, Button} from 'react-bootstrap';\nimport  apiEndpoint  from '../../Config/backendConfig';\n\n\nclass NewComment extends Component{\n\n    constructor(props){\n        super(props);\n        this.state ={\n            isLoading: true,\n            newComment: '',\n            user: '',\n            jwtToken:''\n            \n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.addComment = this.addComment.bind(this);\n        this.handleChange =this.handleChange.bind(this);\n        this.handleAuth = this.handleAuth.bind(this);\n    }\n\n    async addComment(ServiceID){\n        \n        await axios.post(apiEndpoint+'/service/'+ServiceID, {Comments: this.state.newComment },{headers: \n                        { 'Content-Type': 'application/json',\n                        'Authorization': `Bearer ${this.state.jwtToken}`}}\n                        ).then(res => {})\n                        .catch(e => console.log(e));\n        \n        console.log(this.state.user)\n        window.location =\"/results\";\n            \n    }\n    async handleAuth (){\n        const token = new getToken();\n        await token.token()\n        this.setState({\n            user: token.state.user, \n            jwtToken: token.state.jwtToken\n        })\n        \n    } \n\n    \n\n    handleChange = event => {\n        this.handleAuth();\n        \n        const userlog = this.state.user;\n        console.log(this.state.user);\n        const target = event.target;\n        const value = target.value;\n        this.setState({newComment : {date: new Date(), By: userlog , text: value }});\n\n    }\n    handleSubmit = event => {\n        \n        event.preventDefault();\n        this.addComment(this.props.ServiceID);\n        \n        \n\n    }\n\n    render() {\n        \n                \n           return (\n           <div>\n            <Form onSubmit={this.handleSubmit}>\n                <Form.Group>\n                    <Form.Label>Add a Comment:</Form.Label>\n                    <Form.Control as=\"textarea\" name=\"textarea\" rows=\"5\" cols=\"80\" onChange = {this.handleChange}/>\n\n                </Form.Group>\n                 <Button variant=\"primary\" type=\"submit\">Submit</Button>\n            </Form>\n            </div>\n                \n                   \n           )\n       }\n}\n\nexport default NewComment;","import GoogleMapReact from 'google-map-react';\n\nimport React, {Component} from 'react';\n\nclass GMaps extends Component {\n\n    constructor(props){\n        super(props);\n        this.state ={\n            key: process.env.REACT_APP_GM_KEY,\n            coordinates:this.props.Coordinates,\n            zoom: 11,\n            \n        }\n        this.handleSearch(props);\n        \n    }\n    handleSearch(newSearch){\n        if (newSearch===true){\n\n           this.componentWillUnmount();\n        }\n    }\n    componentWillUnmount() {\n        console.log('Google maps will be unmount')\n        clearInterval(this.interval);\n    }\n\n\n    \n    render (){\n        this.handleSearch(this.props.newSearch)\n        return(\n            <div style={{ height: '29vh', width: '100%' }}> \n                <GoogleMapReact\n                bootstrapURLKeys={{ key: this.state.key}}\n                defaultCenter= {this.props.Coordinates}\n                defaultZoom= {this.state.zoom}\n                \n                >\n              </GoogleMapReact>\n            </div>\n\n\n\n        )\n\n\n    }\n}\n\nexport default GMaps;","import React, {Component} from 'react';\nimport {Card, Table, Accordion, Button, FormControl, Form, Col, ProgressBar, Row} from 'react-bootstrap';\nimport Styled from 'styled-components';\nimport axios from 'axios';\nimport getToken from '../../Auth/getToken';\nimport  apiEndpoint  from '../../Config/backendConfig';\n\n\nconst TableStyle = Styled.div`\n    \n    overflow-y: scroll;\n    height: 200px;\n    \n    `;\n\n\n\nclass Archives extends Component{\n\n constructor(props){\n     super(props);\n     this.state ={\n         file: null,\n         filename: '',\n         UploadUrl: '',\n         FileDescription:'',\n         user:'',\n         jwtToken:'',\n         filesOn: [],\n         DescriptionArray: [],\n         uploadProgress: null\n\n     };\n     this.handleAuth(); \n     \n     \n     \n    }\n    //to assigne a props variable to state once the component is mount\n    UNSAFE_componentWillReceiveProps(props) {\n        this.setState({filesOn: props.url, DescriptionArray: props.descriptionArray});\n    }\n        \n    updateProgressBarValue(percentage){\n        \n        if (percentage !== 0){\n\n            return(<ProgressBar now={percentage} />)\n        }\n            \n        \n    }\n\n    getFiles(){\n        //console.log(this.state.filesOn)\n        \n       \n      \n\n           const archivesArray = this.state.filesOn;\n           const lstOfFiles = archivesArray.map((file) =>\n                            \n                                <tr>\n                                    <td>{archivesArray.indexOf(file)+1}</td>\n                                    <td>< a href={file}>{file.split(\".com/\")[1]}</a></td>\n                                    <td>{this.state.DescriptionArray[archivesArray.indexOf(file)]}</td>\n                                </tr>\n                            \n            )\n        \n            return lstOfFiles;\n        \n    }\n    handleFiles = event => {\n        // save file and filename on State\n        this.setState({\n            file: event.target.files[0], \n            filename: event.target.files[0]['name'] \n            });      \n    }\n\n    handleFileDescription = event => {\n        this.setState({FileDescription: event.target.value});\n        console.log(event.target.value)\n\n    }\n    handleFilesSubmit = event =>{\n        this.getSignedUrl();\n       \n        event.preventDefault();\n    }\n\n    async getSignedUrl(){\n        console.log(this.state.jwtToken);\n        //REQUESTING SIGNED URL\n        await axios.patch(apiEndpoint+'/item/'+this.props.serviceID+'?item=service&filename='+this.state.filename, \n                                {description: this.state.FileDescription },\n                                {headers:{ 'Content-Type': 'application/json',\n                                            'Authorization': `Bearer ${this.state.jwtToken}`}},\n                                \n                                            ).then(res => {\n                                                this.setState({UploadUrl: res.data.Url}); \n                                                console.log(this.state.UploadUrl);\n                                                this.UploadFile();\n                                            }).catch(e => {console.log(e)});\n        \n\n    }\n\n    async UploadFile(){\n        await axios.put(this.state.UploadUrl, this.state.file,{\n            onUploadProgress: (Progress) => {\n                   if (Progress.lengthComputable) {\n                           console.log(Progress.loaded + ' ' + Progress.total);\n                           if (Progress.total!==null){\n                                    this.setState({uploadProgress: Math.round((Progress.loaded *100)/Progress.total)})\n                                }\n                       }\n                 } \n            }).then(res => { window.location =\"/results\"})\n              .catch(e => console.log(e))\n    }\n\n    async handleAuth (){\n        const token = new getToken();\n        await token.token();\n        this.setState({\n            user: token.state.user, \n            jwtToken: token.state.jwtToken\n        })\n        \n    } \n\n\n\n\n    render(){\n       \n        \n        \n\n        \n        return(<div>\n            <Row>\n                <Col>\n                <Card style={{ width: '30rem' }}> \n                   <Card.Header>Archives</Card.Header>\n                   <Card.Text><TableStyle>\n                   <Table striped bordered hover>\n                    <thead>\n                            <tr>\n                            <th>#</th>\n                            <th>File Name</th>\n                            <th>Description</th>\n                            </tr>\n                        </thead> \n                        <tbody>\n                           {this.getFiles()}\n                        </tbody>\n                       \n                    </Table> </TableStyle>\n                    </Card.Text>\n                </Card>\n                </Col>\n                <Col >\n               \n                <Accordion>\n                    <Card style={{ width: '30rem' }}>\n                        <Card.Header>\n                            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                            <Button variant=\"primary\" type=\"submit\">Add a file</Button> \n                            </Accordion.Toggle>\n                                {this.updateProgressBarValue(this.state.uploadProgress)}\n                        </Card.Header>\n                            <Accordion.Collapse eventKey=\"0\">\n                            <Card.Body>\n                            \n                                <Form >\n                                    <Form.Row>\n\n                                        <Form.Group as={Col} controlId=\"FileDescr\">\n                                            <Form.Label>Description</Form.Label>\n                                            <FormControl name=\"Description\" type=\"text\" onChange = {this.handleFileDescription} /> \n                                        </Form.Group> \n                                        \n                                        <Form.Group as={Col} controlId=\"File\">\n                                            <Form.Label>File to Upload</Form.Label>\n                                            <FormControl name=\"files\" type=\"file\" onChange={this.handleFiles}/>\n                                        </Form.Group>\n                                    </Form.Row>\n                                </Form>\n                                \n                                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n                                <Button variant=\"primary\" type=\"submit\" onClick={this.handleFilesSubmit}>Upload</Button> \n                                </Accordion.Toggle>\n                            </Card.Body>\n                            </Accordion.Collapse>\n                    </Card>\n                </Accordion>\n                \n                </Col>\n                </Row>\n                </div>\n                    \n                   \n\n               \n               \n               \n            \n        )\n    }\n}\n\nexport default Archives;","import React, { Component } from \"react\";\nimport getToken from \"../../Auth/getToken\";\nimport {Nav, Navbar, Form, FormControl, Col, Table, Modal, Button} from 'react-bootstrap';\nimport axios from 'axios';\nimport  apiEndpoint  from '../../Config/backendConfig';\n\nclass EditCustomer extends Component{\n\n\n    constructor(props){\n        super(props);\n        this.state={\n            CustomerName: this.props.customer.CustomerName, SiteNumber:this.props.customer.SiteNumber, Address:this.props.customer.Address, \n            City:this.props.customer.City, Province:this.props.customer.Province, PostalCode:this.props.customer.PostalCode, \n            ContactName:this.props.customer.ContactName,\n            Phone:this.props.customer.Phone, CustomerID:this.props.customer.CustomerID,\n            jwtToken:\"\",\n            user:\"\",\n            show: true,\n        };\n        this.updateCustomer= this.updateCustomer.bind(this);\n\n\n    }\n\n    async handleAuth (){\n        const token = new getToken();\n        await token.token()\n        this.setState({\n            user: token.state.user, \n            jwtToken: token.state.jwtToken\n        })  \n    } \n\n\n    handleImput = event => {\n        this.handleAuth();\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        \n        this.setState({[name] : value })\n        // console.log(this.state.SiteNumber);\n    }\n\n    handleClose = () => {\n        \n        this.setState({show: false});\n        window.location =\"/results\"; \n\n    }\n\n    async updateCustomer(){\n        console.log(this.state.jwtToken)\n        \n        const customer = {\n            CustomerName: this.state.CustomerName,\n            SiteNumber : this.state.SiteNumber,\n            Address: this.state.Address,\n            City: this.state.City,\n            Province: this.state.Province,\n            Phone: this.state.Phone,\n            PostalCode: this.state.PostalCode,\n            ContactName: this.state.ContactName,\n            CustomerID: this.state.CustomerID\n        }\n       \n        await axios.patch(apiEndpoint+'/customer/'+this.state.CustomerID, \n                            customer,\n                            {headers: \n                                    { 'Content-Type': 'application/json',\n                                      'Authorization': `Bearer ${this.state.jwtToken}`}}\n                            ).then(res => {this.handleClose()})\n                            .catch(e => console.log(e));\n\n    }\n\n    render() {\n       \n\n        return (<div>\n                        <Modal show={this.state.show} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n                        <Modal.Header>\n                            <Modal.Title id=\"contained-modal-title-vcenter\">\n                            Customer Update\n                            </Modal.Title>\n                        </Modal.Header>\n                         <Modal.Body>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"CustomerName\" >\n                                <Form.Label>Customer</Form.Label>\n                                <Form.Control type=\"text\" placeholder={this.state.CustomerName} onChange = {this.handleImput} name=\"CustomerName\"/>\n                                </Form.Group>\n                                \n\n                                <Form.Group as={Col} controlId=\"SiteNumber\">\n                                <Form.Label>Site Number:</Form.Label>\n                                <Form.Control type=\"Site\" placeholder={this.state.SiteNumber} onChange = {this.handleImput} name=\"SiteNumber\"/>\n                                </Form.Group>\n                            </Form.Row>\n\n                            <Form.Group controlId=\"Address\">\n                                <Form.Label>Address</Form.Label>\n                                <Form.Control placeholder={this.state.Address} onChange = {this.handleImput} name=\"Address\" />\n                            </Form.Group>\n                                <Form.Row>\n                                    <Form.Group as={Col} controlId=\"City\">\n                                    <Form.Label>City</Form.Label>\n                                    <Form.Control onChange = {this.handleImput} name=\"City\" placeholder={this.state.City}/>\n                                    </Form.Group>\n\n                                    <Form.Group as={Col} controlId=\"Province\">\n                                    <Form.Label>Province</Form.Label>\n                                    <Form.Control as=\"select\" onChange = {this.handleImput} name=\"Province\" placeholder={this.state.Province}>\n                                        <option>Choose...</option>\n                                        <option>Alberta</option>\n                                        <option>British Columbia</option>\n                                    </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group as={Col} controlId=\"PostalCode\">\n                                    <Form.Label>Postal Code</Form.Label>\n                                    <Form.Control onChange = {this.handleImput} name=\"PostalCode\" placeholder={this.state.PostalCode}/>\n                                    </Form.Group>\n                                </Form.Row>\n                                <Form.Row>\n                                    <Form.Group as={Col} controlId=\"ContactName\">\n                                        <Form.Label>Contact Name:</Form.Label>\n                                        <Form.Control placeholder={this.state.ContactName}  onChange = {this.handleImput} name=\"ContactName\"/> \n                                    </Form.Group>\n                                    <Form.Group as={Col} controlId=\"Phone\">\n                                        <Form.Label>Phone:</Form.Label>\n                                        <Form.Control placeholder={this.state.Phone}  onChange = {this.handleImput} name=\"Phone\"/> \n                                    </Form.Group>\n                                </Form.Row>\n                                        \n\n                        </Modal.Body>\n                        <Modal.Footer>\n                        <Button onClick={this.updateCustomer}>Update</Button>\n                        <Button onClick={this.handleClose}>Close</Button>\n                        </Modal.Footer> \n                         </Modal>\n                    </div>\n                        \n                )\n\n\n\n    }\n\n}\n\nexport default EditCustomer;","import React, {Component} from 'react';\nimport axios from 'axios';\nimport getToken from '../../Auth/getToken'\nimport styled from 'styled-components';\nimport NewComment from './AddComment';\nimport {Card, Button, Spinner, Nav, Navbar, Form, Modal, Container, Row, Col} from 'react-bootstrap';\nimport GMaps from './googleMaps';\nimport Geocode from 'react-geocode';\nimport Archives from './Archives';\nimport  apiEndpoint  from '../../Config/backendConfig';\nimport EditCustomer from '../../Components/Customer/EditCustomer';\n\n\n\n\nconst CommentStyle = styled.div` \n                \n    overflow: auto;\n    \n    margin: 16px ;\n    \n    \n    text-align: left;\n    word-wrap: break-word;\n       \n    position: relative; \n                    \n                  \n    `;\n\nconst IdNumber = styled.h1`\n    font-size: 1.2em;\n    position: relative;\n    \n    \n    \n   \n    `;\nconst Wrapper = styled.div`\n    font-size: 1em;\n    position: relative;\n    \n   \n    `;\nconst Customer = styled.div`\n    text-align: left;\n    position: relative;\n    word-wrap: break-word; \n    `;\nconst Maps = styled.div`\n    text-align: left;\n    position: relative;     \n    `;\n const Comments = styled.div`\n    text-align: left;\n    position: relative; \n    overflow: auto;\n    height: 300px;\n    top: 10px;\n `;\n\n const Attach = styled.div`\n    position: relative;\n    margin: 16px ;\n    height: 300px;\n    text-align: left;\n    top: 20px;\n    \n   \n    \n `;\n\n const NewCommentpos = styled.div`\n    position: relative;\n    top: 30px;\n    font-size: 14px;\n    height: 300px;\n    width: 400px;\n    \n\n    \n `;\n \n\n\nclass GetItembyID extends Component {\n\n\n   \n   constructor(props){\n       super(props);\n       this.state ={\n           isLoading: true,\n           \n           ticket:[],\n           Comments: [],\n           CustomerId: \"\", CustomerName: \"\", SiteNumber:\"\", Address:\"\", City:\"\", Province:\"\",PostalCode:\"\", ContactName:\"\", Phone:\"\", \n           zoom : 8,\n           Addressfull: \"\",\n           coordinates: null,\n           newSearch: false,\n           editCustomer: false\n           \n       };\n       \n       \n   }\n\n   handleSearch() {\n    \n        let newSearchText = this.props.location.state.searchText;\n        //console.log(newSearchText);\n        \n        this.getItem(newSearchText,\"service\");\n       // console.log(this.state.searchText);\n        \n  };\n\n  componentDidMount() {\n   \n    this.handleSearch()\n  }\n\n  componentDidUpdate(prevProps) {\n    let prevSearch = prevProps.location.state.searchText;\n    let newSearch = this.props.location.state.searchText;\n    if (prevSearch !== newSearch) {\n        \n       // console.log(this.state.searchText);\n        this.handleSearch();\n        this.setState({newSearch: true});   \n        \n    } \n  }\n\n  handleMaprequest(){\n    \n    if (this.state.coordinates!==null) {\n        if (this.state.newSearch===true){\n            console.log(\"new search, reseting google maps\")\n            this.setState({ coordinates: null, newSearch : false,})\n            \n            return (<div>\n                <Spinner animation=\"border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n            </div>)\n        }else {\n            console.log(\"first search, Starting google maps\")\n            return(\n                <div>\n                    <GMaps Coordinates={this.state.coordinates}/>\n                </div>\n            )\n        }\n    }else {\n            console.log(\"No coordinates \");\n            return(<div><Spinner animation=\"border\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n            </Spinner></div>)\n        }\n}\n\n  handleGeolocation() {\n        this.setState({Addressfull: this.state.Address +\" \"+ this.state.City +\" \"+ this.state.Province +\" \"+ this.state.PostalCode})\n        Geocode.setApiKey(process.env.REACT_APP_GM_KEY);\n        const customerAddress = this.state.Addressfull;\n        Geocode.fromAddress(customerAddress).then(\n        response => {\n                const { lat, lng } = response.results[0].geometry.location;\n                //console.log(lat, lng);\n                \n                this.setState({coordinates:{lat: lat, lng:lng}}); \n                }).catch(error => {console.error(error)}); \n\n\n    }\n    \n    editButton = () => {\n        this.setState({editCustomer: true})\n\n    }\n    handleCustomerEdit(){\n        let customer = null;\n        if (this.state.editCustomer){\n            customer = {\n                CustomerName: this.state.CustomerName,\n                SiteNumber : this.state.SiteNumber,\n                Address: this.state.Address,\n                City: this.state.City,\n                Province: this.state.Province,\n                Phone: this.state.Phone,\n                PostalCode: this.state.PostalCode,\n                ContactName: this.state.ContactName,\n                CustomerID: this.state.CustomerId\n            }\n            \n            return(\n                <EditCustomer customer={customer}/>\n            )\n        }\n    }\n      \n   async getItem(ID, type){\n       \n        const token = new getToken();\n        await token.token()\n        //console.log(token.state)\n        \n        await axios.get(apiEndpoint+'/item/'+ID+'?item='+type, {headers: \n                    { 'Content-Type': 'application/json',\n                      'Authorization': `Bearer ${token.state.jwtToken}`}}\n                      ).then(res => {\n                                        if (type===\"service\"){\n                                        this.setState({ \n                                        isLoading: false, ticket :res.data.ticket[0], \n                                        Comments: res.data.ticket[0]['Comments'],\n                                        CustomerId:res.data.ticket[0]['CustomerID'] });\n                                        \n                                        this.getItem(this.state.CustomerId,\"customer\")\n                                        } else {\n                                            this.setState({\n                                                CustomerName: res.data.customer[0]['CustomerName'], \n                                                SiteNumber: res.data.customer[0]['SiteNumber'],\n                                                Address: res.data.customer[0]['Address'],\n                                                City: res.data.customer[0]['City'],\n                                                Province: res.data.customer[0]['Province'],\n                                                PostalCode: res.data.customer[0]['PostalCode'], \n                                                ContactName: res.data.customer[0]['ContactName'],\n                                                Phone: res.data.customer[0]['Phone'],\n                                                \n                                            })\n                                            this.handleGeolocation();\n     \n\n                                        }\n                                        \n                                    })\n                      .catch(e => {console.log(e); alert(\"No Ticket or Customer has been found\");\n                                    window.location = \"/Dashboard\"})  \n        //window.location =\"/results\"; \n                            \n                                                                               \n        }\n\n    \n   \n    render() {\n    \n    const showMap = this.handleMaprequest();\n    const customerEdit= this.handleCustomerEdit();\n        \n            \n        \n    \n        \n        \n    \n     const CommentsArray = this.state.Comments;\n     const lstComments = CommentsArray.map((comment) =>  \n            \n        <div key={CommentsArray.indexOf[comment]}> \n        <CommentStyle>\n            <Card style={{ width: '35rem' }}>\n            <Card.Body>\n            <Card.Title>Date: {comment['date']} </Card.Title>\n            <Card.Subtitle className=\"mb-2 text-muted\">By: {comment['By']}</Card.Subtitle>\n                    <Card.Text>\n                        {comment['text']}\n                    </Card.Text>\n            </Card.Body>\n            </Card>\n        </CommentStyle>\n        </div>\n        ); \n     \n       \n        return (\n        <div>\n            \n            <Container>\n        \n           \n            <Row>\n                <Col>\n                    <IdNumber> Ticket Number: {this.state.ticket.ServiceID}</IdNumber>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                <Customer> \n            \n                <Card style={{ width: '30rem' }}>     \n                \n                <Card.Body>\n                    <Card.Title>{this.state.CustomerName} </Card.Title>\n                    <Card.Text>\n                    \n                    <p> Site Number: {this.state.SiteNumber}</p>\n                    <p>{this.state.Address}  {this.state.City}, {this.state.Province} , {this.state.PostalCode}</p>\n                    <p> Contact: {this.state.ContactName},   Phone : {this.state.Phone}</p>\n                    </Card.Text>\n                    <Button variant=\"primary\" onClick={this.editButton}>edit</Button>\n                </Card.Body>\n                </Card>\n                </Customer>\n                <Wrapper>\n                <Card style={{ width: '30rem' }}>\n                <Card.Body>\n                    <Card.Title> {this.state.ticket.Title} </Card.Title>\n                    \n                    <Card.Text>\n                        <p>Description:</p>\n                    {this.state.ticket.Description}\n                    </Card.Text>\n                    \n                </Card.Body>\n                </Card>\n                </Wrapper>\n                </Col>\n                <Col>\n                <Maps>\n                    <Card style={{ width: '30rem'}}>\n                    {showMap}\n                    </Card>\n                </Maps>\n                </Col>\n           </Row>\n           <Row>\n                <Col sm={7}>\n                <Comments>\n                <Card> \n                   <Card.Header>Comments</Card.Header>\n                    {lstComments}\n                </Card>\n                </Comments>\n                </Col>\n                <Col >\n                <NewCommentpos><NewComment ServiceID={this.state.ticket.ServiceID} /></NewCommentpos>\n                {customerEdit}\n                \n                </Col>\n           </Row>\n           \n            \n           <Attach>\n                <Archives url={this.state.ticket.attachmentUrl} descriptionArray={this.state.ticket.fileDescription} serviceID={this.state.ticket.ServiceID}/>\n            </Attach>\n            \n            \n            </Container>\n           \n        </div> \n               \n        )\n    }\n}\n   \n\n    \n   \nexport default GetItembyID;","import React, {Component} from 'react';\nimport {Button, Card} from 'react-bootstrap';\nimport {Nav, Navbar, Form, FormControl, Col, Table, Modal, Container} from 'react-bootstrap';\nimport {BrowserRouter, Route, Switch, withRouter, Redirect} from 'react-router-dom';\nimport axios from 'axios';\nimport getToken from '../../Auth/getToken'\nimport styled from 'styled-components';\nimport  apiEndpoint  from '../../Config/backendConfig';\n\n\nconst ServiceStyle = styled.div` \n    display: block;            \n    \n    \n    margin: 16px ;\n    border: 1px solid #DCDCDC;\n    box-shadow: 0 2px 3px #ccc;\n    padding: 10px;\n    text-align: left;\n    position: relative;\n    word-wrap: break-word;\n    \n    overflow: auto;              \n                  `;\n\n    \n\nclass Services extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            chkNewCustomer: false,\n            CustomerName: \"\", SiteNumber:\"\", Address:\"\", City:\"\", Province:\"\",PostalCode:\"\", ContactName:\"\", Phone:\"\", CustomerID:\"\",\n            Title: \"\", Description:\"\", Status:\"\", PriorityLevel:\"\", CreatedBy:\"\", \n            jwtToken:\"\",\n            CustomMessage:\"\",\n            user:\"\",\n            customerSearchlst: null,\n            modalShow: false\n\n\n        };\n\n    }\n\n    handleChk = () =>{\n       if (this.state.chkNewCustomer===false){\n        this.setState({chkNewCustomer : true});\n       } else{\n        this.setState({chkNewCustomer : false});\n       }\n\n    }\n\n    handleCustomerSubmit =event =>{\n        //console.log(this.state.Customer);\n        \n        if (this.state.chkNewCustomer){\n        \n        const newCustomer = {\n            CustomerName: this.state.CustomerName,\n            SiteNumber : this.state.SiteNumber,\n            Address: this.state.Address,\n            City: this.state.City,\n            Province: this.state.Province,\n            Phone: this.state.Phone,\n            PostalCode: this.state.PostalCode,\n            ContactName: this.state.ContactName\n           }\n        this.createItem(newCustomer,\"customer\");\n        event.preventDefault();\n        } else {\n            this.searchCustomer(this.state.CustomerName);\n            event.preventDefault();\n\n\n\n\n        }\n        \n    }\n\n    handleServiceSubmit = event =>{\n        const newService= {\n            CustomerID: this.state.CustomerID,\n            Title: this.state.Title, \n            Description: this.state.Description,\n            Status: this.state.Status, \n            PriorityLevel: this.state.PriorityLevel, \n            CreatedBy: this.state.user\n        }\n        this.createItem(newService,\"service\");\n        event.preventDefault();\n        \n    }\n\n    handleImput = event => {\n        this.handleAuth();\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        \n        this.setState({[name] : value });\n    }\n    \n    \n    async handleAuth (){\n        const token = new getToken();\n        await token.token()\n        this.setState({\n            user: token.state.user, \n            jwtToken: token.state.jwtToken\n        })  \n    } \n    \n    async createItem(NewItem, type ){\n        \n        console.log(NewItem);\n        await axios.post(apiEndpoint+'/item?item='+type, \n                        NewItem,\n                        {headers: \n                            { 'Content-Type': 'application/json',\n                            'Authorization': `Bearer ${this.state.jwtToken}`}\n                        }\n                            ).then(res => {\n                                if (type===\"customer\"){\n                                this.setState({CustomerID:res.data.item.CustomerID, CustomMessage: \"Customer has been Created.\"})\n                                ;console.log(res.data.item.CustomerID)\n                                }else {\n                                    console.log(res.data.item.ServiceID);\n                                    this.setState({CustomMessage: \"Service has been Created.\"});\n                                    this.props.history.push({\n                                        pathname: \"/results\",\n                                        state: {\n                                          searchText: res.data.item.ServiceID\n                                        }});\n                                    //window.location =\"/Results\";\n                                    \n                                }\n                            })\n                            .catch(e => {alert(\"Customer not created, it might already exists\",e); console.log(e)});\n        \n        \n    }\n\n    async searchCustomer(CustomerName){\n       // console.log(CustomerName)\n        await axios.get(apiEndpoint+'/customername/'+CustomerName,  \n        \n                {headers: \n                    { 'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${this.state.jwtToken}`}\n                }).then(res => {this.setState({customerSearchlst: res.data.customer, modalShow: true}); console.log(res.data.customer)})\n                  .catch(e => console.log(e))\n\n\n    }\n    \n    showCustomerSearch(){\n        \n        let customerLst= this.state.customerSearchlst;\n        const lstOfCustomers = customerLst.map((customer) =>\n                \n                <tr className='clickable-row' onClick={() => this.chooseCustomer(customer)}>    \n                \n                    <td >{customerLst.indexOf(customer)+1}</td>\n                    <td>{customer.CustomerName}</td>\n                    <td>{customer.SiteNumber}</td>\n                    <td>{customer.City}</td>\n                    <td>{customer.Province}</td>\n                    <td>{customer.ContactName}</td>\n                    <td>{customer.Phone}</td>\n                \n                </tr>\n                )\n        return lstOfCustomers;\n    }\n\n    chooseCustomer(customer){\n        this.setState({CustomerName: customer.CustomerName, SiteNumber: customer.SiteNumber, Address: customer.SiteNumber, \n                        City: customer.City, Province: customer.Province,PostalCode:customer.PostalCode, ContactName: customer.ContactName, \n                        Phone: customer.Phone, CustomerID: customer.CustomerID, modalShow: false, customerSearchlst: null })\n\n\n    }\n    \n    ModalList(){\n        \n        let show = false;\n        const handleClose = () => {\n            show= false;\n            this.setState({modalShow: false, customerSearchlst: null});\n        }\n        \n        if (this.state.customerSearchlst && this.state.modalShow){\n            show = true;\n            console.log(\"dentro del if\")\n             return( \n                        <Modal show={show} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n                            <Modal.Header closeButton>\n                                <Modal.Title id=\"contained-modal-title-vcenter\">\n                                Search Result\n                                </Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>\n                            \n                                        <Table striped bordered hover>\n                                            <thead>\n                                                <tr>\n                                                <th>#</th>\n                                                <th>Customer Name</th>\n                                                <th>Site Number</th>\n                                                <th>City</th>\n                                                <th>Province</th>\n                                                <th>Contact Name</th>\n                                                <th>Phone</th>\n                                                </tr>\n                                            </thead> \n                                            <tbody>\n                                                {this.showCustomerSearch()}\n                                            </tbody>\n                                        </Table>\n\n                            </Modal.Body>\n                            <Modal.Footer>\n                                <Button onClick={handleClose}>Close</Button>\n                            </Modal.Footer>\n                            </Modal>\n                            \n            )}\n        }\n\n    render() {\n        \n        let butText =\"\"\n        let formNewCust = null;\n        if (this.state.chkNewCustomer){\n            butText = \"Submit\";\n            formNewCust = \n            ( <div>\n                    <Form.Group controlId=\"Address\">\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control placeholder={this.state.Address} onChange = {this.handleImput} name=\"Address\" />\n                </Form.Group>\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"City\">\n                    <Form.Label>City</Form.Label>\n                    <Form.Control onChange = {this.handleImput} name=\"City\" placeholder={this.state.City}/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Province\">\n                    <Form.Label>Province</Form.Label>\n                    <Form.Control as=\"select\" onChange = {this.handleImput} name=\"Province\" placeholder={this.state.Province}>\n                        <option>Choose...</option>\n                        <option>Alberta</option>\n                        <option>British Columbia</option>\n                    </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"PostalCode\">\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control onChange = {this.handleImput} name=\"PostalCode\" placeholder={this.state.PostalCode}/>\n                    </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"ContactName\">\n                        <Form.Label>Contact Name:</Form.Label>\n                        <Form.Control placeholder={this.state.ContactName}  onChange = {this.handleImput} name=\"ContactName\"/> \n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"Phone\">\n                        <Form.Label>Phone:</Form.Label>\n                        <Form.Control placeholder={this.state.Phone}  onChange = {this.handleImput} name=\"Phone\"/> \n                    </Form.Group>\n                </Form.Row>\n                </div>\n            );\n\n        } else {\n            butText = \"Search\";\n        }\n        \n\n        return (\n            <Container>\n                \n                <ServiceStyle>\n                <Col>\n                <Form onSubmit ={this.handleCustomerSubmit}>\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"CustomerName\" >\n                        <Form.Label>Customer</Form.Label>\n                        <Form.Control type=\"text\" placeholder={this.state.CustomerName} onChange = {this.handleImput} name=\"CustomerName\"/>\n                        </Form.Group>\n                        \n\n                        <Form.Group as={Col} controlId=\"SiteNumber\">\n                        <Form.Label>Site Number:</Form.Label>\n                        <Form.Control type=\"Site\" placeholder={this.state.SiteNumber} onChange = {this.handleImput} name=\"SiteNumber\"/>\n                        </Form.Group>\n                    </Form.Row>\n                    {formNewCust}\n                \n\n                        <Form.Group id=\"formGridCheckbox\">\n                            <Form.Check type=\"checkbox\" label=\"New Customer\" onClick= {this.handleChk} />\n                        </Form.Group>\n\n                        <Button variant=\"primary\" type=\"submit\" >\n                            {butText}\n                        </Button>\n                        <div> {this.state.CustomMessage}</div>\n                </Form>\n                </Col>\n                </ServiceStyle>\n                \n                \n                <ServiceStyle>\n                <Col>\n                <Form onSubmit ={this.handleServiceSubmit}>\n                \n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridTtitle\">\n                    <Form.Label>Title</Form.Label>\n                    <Form.Control type=\"Title\" name=\"Title\" onChange = {this.handleImput}/>\n                    </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridPrioritty\">\n                    <Form.Label>Priority Level</Form.Label>\n                    <Form.Control as=\"select\" name=\"PriorityLevel\" onChange = {this.handleImput}>\n                        <option>...Choose</option>\n                        <option>Normal (5 days)</option>\n                        <option>Level 1 (3 days)</option>\n                        <option>Level 2 (next day)</option>\n                        <option>Critical Level (5 hours)</option>\n                    </Form.Control> \n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridStatus\">\n                    <Form.Label>Status</Form.Label>\n                    <Form.Control as=\"select\" name=\"Status\" onChange = {this.handleImput}>\n                        <option>...Choose</option>\n                        <option>Create</option>\n                    </Form.Control>\n                    </Form.Group>\n                </Form.Row>\n                <Form.Group controlId=\"description\">\n                    <Form.Label>Description:</Form.Label>\n                    <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Enter a brief description for this ticket\" name=\"Description\" onChange = {this.handleImput}/>\n                </Form.Group>\n\n                <Button variant=\"primary\" type=\"submit\">\n                    Create\n                </Button>\n                </Form>\n                </Col>\n                </ServiceStyle>\n                {this.ModalList()}\n                \n                </Container>\n                \n        \n        )\n    }\n\n}\n\nexport default Services; ","import React, {Component} from 'react';\nimport {Button, Container} from 'react-bootstrap';\nimport styled from 'styled-components';\nimport Customers from  './Components/Customer/Customers'\nimport GetItembyID from './Components/Services/GetItembyId';\nimport Services from './Components/Services/Services';\nimport {BrowserRouter, Route, Switch, withRouter} from 'react-router-dom';\nimport {Nav, Navbar, Form, FormControl, Row, Col} from 'react-bootstrap';\nimport { Authenticator, Greetings } from 'aws-amplify-react';\n\nimport './App.css';\n\n\nconst AuthStyle = styled.div`\n    width: 300px;\n    margin: 10px ;\n   `;\n  \n\nclass Header extends React.Component{\n\n  \n    state ={\n        searchText: \"\",\n    };\n    \n  handleRoute = route => () => {\n      this.props.history.push({ pathname: route })\n      \n    };\n  \n  \n  handleSearchSubmit = () => {\n      if (this.state.searchText) {\n        this.props.history.push({\n          pathname: \"/results\",\n          state: {\n            searchText: this.state.searchText\n          }\n        });\n      } else {\n        alert(\"Please enter a Ticket Number\");\n      }\n    };\n\n  \n  handleSearchInput = event => {\n    this.setState({\n      searchText: event.target.value\n    });\n  };\n\n  render(){\n    return(\n      \n        <Container>\n          <Col >\n          <Navbar bg=\"light\" variant=\"light\">\n              <Navbar.Brand>\n                <a href='https://www.juadel.com'>SERVICE MANAGER</a>\n              </Navbar.Brand> \n              <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              {/* <Nav.Link onClick={this.handleRoute(\"/Dashboard\")}>Dashboard</Nav.Link> */}\n              <Nav.Link onClick={this.handleRoute(\"/Services\")}>New Service</Nav.Link>\n              {/* <Nav.Link onClick={this.handleRoute(\"/Customers\")}>Customers</Nav.Link> */}\n            </Nav>\n            <Form inline  >\n              <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" value={this.state.searchText} onChange={this.handleSearchInput}/>\n              <Button className=\"btn-search\" variant=\"outline-info\" onClick={this.handleSearchSubmit} >Search</Button>\n              \n            </Form>\n            \n            \n            </Navbar.Collapse>\n            \n            <AuthStyle><Authenticator hideDefault={true}><Greetings inGreeting={(username) => 'Hello ' + username} /></Authenticator></AuthStyle>\n                   \n          </Navbar>\n            \n          \n          <Switch>\n            {/* <Route path=\"/Dashboard\" component= {Dashboard}/> */}\n            <Route path=\"/Services\" component= {Services}/>\n            {/* <Route path=\"/Customers\" component= {Customers}/> */}\n            <Route path=\"/Results\" component={GetItembyID}/>\n            \n          </Switch>\n          </Col>\n          </Container>\n       \n      \n    )\n  \n  \n  }\n}\nexport default withRouter(Header);\n\nclass Dashboard extends Component{\n    render(){\n      return(\n        <div>\n          jυadel\n        </div>\n      )\n    }\n  }\n  \n  ","import React, {Component} from 'react';\nimport Amplify from 'aws-amplify';\nimport cognito from './Auth/Cognito';\nimport {BrowserRouter} from 'react-router-dom';\nimport { withAuthenticator, Authenticator, Greetings } from 'aws-amplify-react';\nimport Header from './Header';\nimport './App.css';\n\n\nAmplify.configure(cognito);\n\n  \n\nclass App extends Component {\n  \n  \n\n  render(){\n  return (\n    <div>\n      <BrowserRouter>\n      <Header>\n      <h1>Hello</h1>\n      </Header>\n      </BrowserRouter>\n    </div>\n  );\n}\n}\nexport default withAuthenticator(App, false);\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}